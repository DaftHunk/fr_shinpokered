DEF FALSE EQU 0
DEF TRUE  EQU 1

DEF HACK_VERSION EQU 12	;master branch is always an even number

DEF MAX_LEVEL EQU 100

;joenote - use constants to keep everything consistent and avoid missingno glitch
;			- also set it to 8, 9 so that the bottom-left tile of the player space is used
;			- doing so will fix the no-encounter spaces in the forest tileset
DEF ENCOUNTER_TILE_COORD_X EQU 8
DEF ENCOUNTER_TILE_COORD_Y EQU 9

DEF NUM_MOVES     EQU 4
DEF NUM_STATS     EQU 5
DEF NUM_STAT_MODS EQU 8
DEF NUM_DVS       EQU 2

DEF PARTY_LENGTH EQU 6

DEF MONS_PER_BOX EQU 20
DEF NUM_BOXES    EQU 12

DEF BAG_ITEM_CAPACITY EQU 20
DEF PC_ITEM_CAPACITY  EQU 50

DEF HOF_MON           EQU $10
DEF HOF_TEAM          EQU PARTY_LENGTH * HOF_MON
DEF HOF_TEAM_CAPACITY EQU 50

DEF NAME_LENGTH EQU 11
DEF ITEM_NAME_LENGTH EQU 13

DEF A_BUTTON EQU %00000001
DEF B_BUTTON EQU %00000010
DEF SELECT   EQU %00000100
DEF START    EQU %00001000
DEF D_RIGHT  EQU %00010000
DEF D_LEFT   EQU %00100000
DEF D_UP     EQU %01000000
DEF D_DOWN   EQU %10000000

	const_def
	const BIT_A_BUTTON
	const BIT_B_BUTTON
	const BIT_SELECT
	const BIT_START
	const BIT_D_RIGHT
	const BIT_D_LEFT
	const BIT_D_UP
	const BIT_D_DOWN

DEF SCREEN_WIDTH  EQU 20
DEF SCREEN_HEIGHT EQU 18

DEF SCREEN_WIDTH_PIXELS  EQU SCREEN_WIDTH * 8
DEF SCREEN_HEIGHT_PIXELS EQU SCREEN_HEIGHT * 8

DEF BYTES_PER_TILE EQU 16

DEF BG_MAP_WIDTH  EQU 32
DEF BG_MAP_HEIGHT EQU 32

DEF SPRITEBUFFERSIZE EQU 7*7 * 8 ; 7 * 7 (tiles) * 8 (bytes per tile)

DEF NPC_MOVEMENT_DOWN  EQU $00
DEF NPC_MOVEMENT_UP    EQU $40
DEF NPC_MOVEMENT_LEFT  EQU $80
DEF NPC_MOVEMENT_RIGHT EQU $C0

; text box IDs
DEF MESSAGE_BOX                       EQU $01
DEF FIELD_MOVE_MON_MENU               EQU $04
DEF JP_MOCHIMONO_MENU_TEMPLATE        EQU $05
;USE_TOSS_MENU_TEMPLATE            EQU $06
DEF USE_INFO_TOSS_MENU_TEMPLATE       EQU $06 ;dafthunk : #4
DEF JP_SAVE_MESSAGE_MENU_TEMPLATE     EQU $08
DEF JP_SPEED_OPTIONS_MENU_TEMPLATE    EQU $09
DEF BATTLE_MENU_TEMPLATE              EQU $0b
DEF SWITCH_STATS_CANCEL_MENU_TEMPLATE EQU $0c
DEF LIST_MENU_BOX                     EQU $0d
DEF BUY_SELL_QUIT_MENU_TEMPLATE       EQU $0e
DEF MONEY_BOX_TEMPLATE                EQU $0f
DEF MON_SPRITE_POPUP                  EQU $11
DEF JP_AH_MENU_TEMPLATE               EQU $12
DEF MONEY_BOX                         EQU $13
DEF TWO_OPTION_MENU                   EQU $14
DEF BUY_SELL_QUIT_MENU                EQU $15
DEF JP_POKEDEX_MENU_TEMPLATE          EQU $1a
DEF SAFARI_BATTLE_MENU_TEMPLATE       EQU $1b

; two option menu constants
DEF YES_NO_MENU       EQU 0
DEF NORTH_WEST_MENU   EQU 1
DEF SOUTH_EAST_MENU   EQU 2
DEF WIDE_YES_NO_MENU  EQU 3
DEF NORTH_EAST_MENU   EQU 4
DEF TRADE_CANCEL_MENU EQU 5
DEF HEAL_CANCEL_MENU  EQU 6
DEF NO_YES_MENU       EQU 7
IF DEF(_FPLAYER)		;joenote - for female player selection
DEF BOY_GIRL_MENU       EQU 8
ENDC

; menu exit method constants for list menus and the buy/sell/quit menu
DEF CHOSE_MENU_ITEM   EQU 1 ; pressed A
DEF CANCELLED_MENU    EQU 2 ; pressed B

; menu exit method constants for two-option menus
DEF CHOSE_FIRST_ITEM  EQU 1
DEF CHOSE_SECOND_ITEM EQU 2

; move mon constants
DEF BOX_TO_PARTY     EQU 0
DEF PARTY_TO_BOX     EQU 1
DEF DAYCARE_TO_PARTY EQU 2
DEF PARTY_TO_DAYCARE EQU 3

; emotion bubbles
DEF EXCLAMATION_BUBBLE EQU 0
DEF QUESTION_BUBBLE    EQU 1
DEF SMILE_BUBBLE       EQU 2

; slot symbols
DEF SLOTS7      EQU $0200
DEF SLOTSBAR    EQU $0604
DEF SLOTSCHERRY EQU $0A08
DEF SLOTSFISH   EQU $0E0C
DEF SLOTSBIRD   EQU $1210
DEF SLOTSMOUSE  EQU $1614

; party menu types
DEF NORMAL_PARTY_MENU    EQU 0
DEF USE_ITEM_PARTY_MENU  EQU 1
DEF BATTLE_PARTY_MENU    EQU 2
DEF TMHM_PARTY_MENU      EQU 3
DEF SWAP_MONS_PARTY_MENU EQU 4
DEF EVO_STONE_PARTY_MENU EQU 5

; party menu message IDs
DEF ANTIDOTE_MSG     EQU $F0
DEF BURN_HEAL_MSG    EQU $F1
DEF ICE_HEAL_MSG     EQU $F2
DEF AWAKENING_MSG    EQU $F3
DEF PARALYZ_HEAL_MSG EQU $F4
DEF POTION_MSG       EQU $F5
DEF FULL_HEAL_MSG    EQU $F6
DEF REVIVE_MSG       EQU $F7
DEF RARE_CANDY_MSG   EQU $F8

; naming screen types
DEF NAME_PLAYER_SCREEN EQU 0
DEF NAME_RIVAL_SCREEN  EQU 1
DEF NAME_MON_SCREEN    EQU 2

; mon data locations
; Note that some values are not supported by all functions that use these values.
DEF PLAYER_PARTY_DATA EQU 0
DEF ENEMY_PARTY_DATA  EQU 1
DEF BOX_DATA          EQU 2
DEF DAYCARE_DATA      EQU 3
DEF BATTLE_MON_DATA   EQU 4

; player direction constants

DEF PLAYER_DIR_BIT_RIGHT EQU 0
DEF PLAYER_DIR_BIT_LEFT  EQU 1
DEF PLAYER_DIR_BIT_DOWN  EQU 2
DEF PLAYER_DIR_BIT_UP    EQU 3

DEF PLAYER_DIR_RIGHT EQU (1 << PLAYER_DIR_BIT_RIGHT)
DEF PLAYER_DIR_LEFT  EQU (1 << PLAYER_DIR_BIT_LEFT)
DEF PLAYER_DIR_DOWN  EQU (1 << PLAYER_DIR_BIT_DOWN)
DEF PLAYER_DIR_UP    EQU (1 << PLAYER_DIR_BIT_UP)

; flag operations

DEF FLAG_RESET EQU 0
DEF FLAG_SET   EQU 1
DEF FLAG_TEST  EQU 2

; HP bar
DEF HP_BAR_GREEN  EQU 0
DEF HP_BAR_YELLOW EQU 1
DEF HP_BAR_RED    EQU 2

; D733 flags
DEF BIT_TEST_BATTLE EQU 0

; battle type constants
DEF BATTLE_TYPE_NORMAL  EQU 0
DEF BATTLE_TYPE_OLD_MAN EQU 1
DEF BATTLE_TYPE_SAFARI  EQU 2

; serial

DEF ESTABLISH_CONNECTION_WITH_INTERNAL_CLOCK EQU $01
DEF ESTABLISH_CONNECTION_WITH_EXTERNAL_CLOCK EQU $02

DEF USING_EXTERNAL_CLOCK       EQU $01
DEF USING_INTERNAL_CLOCK       EQU $02
DEF CONNECTION_NOT_ESTABLISHED EQU $ff

; signals the start of an array of bytes transferred over the link cable
DEF SERIAL_PREAMBLE_BYTE EQU $FD

; this byte is used when there is no data to send
DEF SERIAL_NO_DATA_BYTE EQU $FE

; signals the end of one part of a patch list (there are two parts) for player/enemy party data
DEF SERIAL_PATCH_LIST_PART_TERMINATOR EQU $FF

DEF LINK_STATE_NONE          EQU $00 ; not using link
DEF LINK_STATE_IN_CABLE_CLUB EQU $01 ; in a cable club room (Colosseum or Trade Centre)
DEF LINK_STATE_START_TRADE   EQU $02 ; pre-trade selection screen initialisation
DEF LINK_STATE_START_BATTLE  EQU $03 ; pre-battle initialisation
DEF LINK_STATE_BATTLING      EQU $04 ; in a link battle
DEF LINK_STATE_RESET         EQU $05 ; reset game (unused)
DEF LINK_STATE_TRADING       EQU $32 ; in a link trade

DEF LINKBATTLE_RUN       EQU $F
DEF LINKBATTLE_STRUGGLE  EQU $E
DEF LINKBATTLE_NO_ACTION EQU $D

; DMGPalToGBCPal
DEF CONVERT_BGP  EQU 0
DEF CONVERT_OBP0 EQU 1
DEF CONVERT_OBP1 EQU 2

DEF NUM_COLORS EQU 4
DEF PAL_SIZE EQU NUM_COLORS * 2
DEF NUM_ACTIVE_PALS EQU 4

;joenote - catch rate given to pokemon marked as dead for nuzlocke mode
DEF DEAD EQU $05

; wOptions
DEF TEXT_DELAY_FAST   		EQU %00000001	; 1
DEF TEXT_DELAY_MEDIUM 		EQU %00000011	; 3
DEF TEXT_DELAY_SLOW   		EQU %00000101 	; 5
DEF TEXT_DELAY_BITS	  		EQU %00000111 	; bits 0 to 2
DEF BIT_BATTLE_HARD  		EQU 3		  	; bit 3
DEF BATTLE_HARD_MODE  		EQU %00001000	; bit 3
DEF SOUND_STEREO_BITS		EQU %00110000 	; bits 4 to 5
DEF BIT_BATTLE_SHIFT  		EQU 6		 	; bit 6
DEF BIT_BATTLE_ANIMATION 	EQU 7		 	; bit 7
; wUnusedD721
DEF BIT_BATTLE_NOSWITCH		EQU 3		  	; bit 3
DEF BATTLE_NOSWITCH  		EQU %00001000	; bit 3

